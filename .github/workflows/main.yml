name: breeze test demo
#on: [push, pull_request]
env:
  MY_SERVER_PRIVATE_KEY: ${{ secrets.MY_SERVER_PRIVATE_KEY }} # 服务器私钥
  DOCKER_REG: registry.api.weibo.com/weibo_rd_if/breeze
  REG: registry.api.weibo.com
on:
  push:
    branches:
      - main    
  schedule:
   # - cron:  '30 4,6,8,10,12,14 * * *'
    - cron: '30 10/2 * * *' 
jobs:
  build: 
    runs-on: macos-11
    steps: 
    - name: 'Checkout codes'
      uses: actions/checkout@v2
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.0.8
      env:
        SSH_PRIVATE_KEY: ${{ secrets.MY_SERVER_PRIVATE_KEY }}
        REMOTE_HOST: '10.222.101.19'
        REMOTE_USER: 'xinxin22'
        SOURCE: ''
        TARGET: '~/sina'
        RGS: '-avzr --delete'
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
            cargo build 
        # script: | 
        #   cargo build
        #   cd ~/sina
        #   mkdir breeze
        #   git init
        #   git remote add origin https://github.com/Aimable-rich/breeze.git
        #   git checkout main
        #   git pull origin main
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: 
          echo "${{ github.event.commits[0].id }}"
    - name: 'docker login to harbor'
      run:
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login $REG -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin 
    - name: 'Build the Docker image'
      run:
          docker build -t  $DOCKER_REG:${{ github.event.commits[0].id }} .
    - name: 'Push docker image'
      run: 
          docker push $DOCKER_REG:${{ github.event.commits[0].id }}
  # - name: Build the Docker image
  #     run:
  #       docker build . --file Dockerfile --tag image
  #   - name: Push Image
  #     run: |
  #       # Strip git ref prefix from version
  #       VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
  #       # Strip "v" prefix from tag name
  #       [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
  #       # Use Docker `latest` tag convention
  #       [ "$VERSION" == "master" ] && VERSION=latest
  #       echo IMAGE_ID=$DOCKER_REG
  #       echo VERSION=$VERSION
  #       docker tag image $DOCKER_REG:$VERSION
  #       docker push $DOCKER_REG:$VERSION


# deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     env:
#       CONTAINER_NAME: my-app
#     steps:
#     - name: deploy docker image
#       uses: appleboy/ssh-action@xinxin22
#       with:
#         host: ${{ secrets.HOST }}
#         username: ${{ secrets.HOST_USERNAME }}
#         password: ${{ secrets.HOST_PASSWORD }}
#         envs: CONTAINER_NAME, DOCKER_REG
#         script: |
#           if [ $(docker ps -a | grep -c $CONTAINER_NAME) -gt 0 ]; then docker stop $CONTAINER_NAME;docker rm $CONTAINER_NAME;fi
#           docker run --name $CONTAINER_NAME -d -p 4000:4000 $DOCKER_REG
